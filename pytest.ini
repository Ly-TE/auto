[pytest]
;输出html报告，不提示警告
addopts = --self-contained-html --html=./report/Test_API_report.html -p no:warnings
;运行哪个文件夹下的用例
testpaths = ./run/
;文件匹配方式
python_files = test_*.py
;匹配用例中以test开头的类
python_classes = Test*
;匹配类中的方法
python_functions = test_*

log_cli = 1
log_cli_level = INFO
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_cli_format = [%(asctime)s]-[%(levelname)s -> %(message)s
log_file = ./logs/run.log
log_file_level = INFO
log_file_date_format = %Y-%m-%d %H:%M:%S
log_file_format = [%(asctime)s] - [%(levelname)s] ->%(message)s

;log_cli = 1 输出日志到控制台
;log_cli_level = INFO 设置控制台日志级别，注意：这里设置之后，脚本文件里设置的导入logging模块， logging.basicConfig(level=logging.DEBUG)设置的日志级别就不起作用了
;log_cli_format 设置控制台日志格式
;log_cli_date_format 设置控制台输出的时间格式
;log_file_format 设置输出到log文件的日志格式
;log_file_date_format 设置输出到log文件的时间格式
# pytest.ini
;[pytest]
;log_cli = 1
;log_cli_level = INFO
;log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
;log_cli_date_format = %Y-%m-%d %H:%M:%S
;log_file_level = INFO
;log_file_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
;log_file_date_format = %Y-%m-%d %H:%M:%S